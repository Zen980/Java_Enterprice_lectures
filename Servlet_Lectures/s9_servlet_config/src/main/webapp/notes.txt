1.  What is servletConfig?
    A ServletConfig is an object created by the web container for each servlet. 
    Its primary purpose is to provide configuration information to a servlet from the web.xml file

2.  Need for ServletConfig
    The primary need for the ServletConfig interface is to enable servlets to access specific initialization parameters and other configuration details that are set up in the deployment descriptor (web.xml)

    Decoupling Configuration from Code: 
        A core advantage of ServletConfig is that if any configuration information is modified in the web.xml file, there is no need to change or recompile the servlet file itself. This promotes a cleaner separation between application logic and deployment-specific settings.
        
    Container-Provided Object: 
        An object of ServletConfig is created by the web container for each servlet, making it readily available for use within the servlet. The getServletConfig() method of the Servlet interface is used to obtain this object.

        Methods

        1.  getInitParameter(String name): Returns the value of a specified initialisation parameter.
        2.  getInitParameterNames(): Returns an enumeration of the names of all initialisation parameters.
        3.  getServletName(): Returns the name of the servlet.

        

3.  Syntax
    web.xml (deployment descriptor)
    <servlet>
        <servlet-name>MyServlet</servlet-name>
        <servlet-class>com.example.MyServlet</servlet-class>
        <init-param>
            <param-name>param1</param-name>
            <param-value>value1</param-value>
        </init-param>
        <init-param>
            <param-name>param2</param-name>
            <param-value>value2</param-value>
        </init-param>
    </servlet>

    @ annotation
    @WebServlet(name = "MyServlet", urlPatterns = {"/myservlet"},
            initParams = {
                    @WebInitParam(name = "param1", value = "value1"),
                    @WebInitParam(name = "param2", value = "value2")
            }
    )
    